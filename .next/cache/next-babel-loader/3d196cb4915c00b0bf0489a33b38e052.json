{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rolikasi/outreachy/digital-public-goods-map/components/infoComponent.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, forwardRef, useImperativeHandle, useRef } from \"react\";\nimport webSymbol from \"../public/globe.png\";\nimport ghLogo from \"../public/github.png\";\nimport { InView } from \"react-intersection-observer\";\nimport Footer from \"./footer\";\nimport Chart from \"react-google-charts\";\nimport confirmedPattern from \"../public/confirmed.svg\";\nimport exploratoryPattern from \"../public/exploratory.svg\";\nvar buttonStyles = {\n  \"Pathfinders Exploratory\": {\n    backgroundImage: \"url(\".concat(exploratoryPattern, \")\")\n  },\n  \"Pathfinders Confirmed\": {\n    backgroundImage: \"url(\".concat(confirmedPattern, \")\")\n  },\n  \"DPGs developed\": {\n    backgroundColor: \"#FF952A\"\n  },\n  \"DPGs deployed\": {\n    backgroundColor: \"#3333AB\"\n  }\n};\nvar sdgsDefault = [{\n  name: \"1. No Poverty\",\n  open: false\n}, {\n  name: \"2. Zero Hunger\",\n  open: false\n}, {\n  name: \"3. Good Health and Well-being\",\n  open: false\n}, {\n  name: \"4. Quality Education\",\n  open: false\n}, {\n  name: \"5. Gender Equality\",\n  open: false\n}, {\n  name: \"6. Clean Water and Sanitation\",\n  open: false\n}, {\n  name: \"7. Affordable and Clean Energy\",\n  open: false\n}, {\n  name: \"8. Decent Work and Economic Growth\",\n  open: false\n}, {\n  name: \"9. Industry, Innovation and Infrastructure\",\n  open: false\n}, {\n  name: \"10. Reduced Inequality\",\n  open: false\n}, {\n  name: \"11. Sustainable Cities and Communities\",\n  open: false\n}, {\n  name: \"12. Responsible Consumption and Production\",\n  open: false\n}, {\n  name: \"13. Climate Action\",\n  open: false\n}, {\n  name: \"14. Life Below Water\",\n  open: false\n}, {\n  name: \"15. Life on Land\",\n  open: false\n}, {\n  name: \"16. Peace and Justice Strong Institutions\",\n  open: false\n}, {\n  name: \"17. Partnerships to achieve the Goal\",\n  open: false\n}];\nvar InfoComponent = /*#__PURE__*/forwardRef(_c = _s(function (props, ref) {\n  _s();\n\n  var _useState = useState({\n    development: false,\n    deployment: false,\n    deploymentsInCountry: false,\n    developmentsInCountry: false\n  }),\n      openCountries = _useState[0],\n      setOpenCountries = _useState[1];\n\n  var _useState2 = useState(false),\n      menuInView = _useState2[0],\n      setMenuInView = _useState2[1];\n\n  var _useState3 = useState([].concat(sdgsDefault)),\n      sdgs = _useState3[0],\n      setSdgs = _useState3[1];\n\n  var toggleEvidence = function toggleEvidence(i) {\n    sdgs[i].open = !sdgs[i].open;\n    setSdgs(_toConsumableArray(sdgs));\n  };\n\n  var handleLayerToggle = function handleLayerToggle(e, layer) {\n    e.preventDefault();\n    e.stopPropagation();\n    props.onLayerToggle(layer);\n  };\n\n  var toggleCountries = function toggleCountries(type) {\n    setOpenCountries(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, type, !prevState[type]));\n    });\n  };\n\n  var divRef = useRef(null);\n  var infoRef = useRef(null);\n\n  var scrollHandle = function scrollHandle() {\n    if (!menuInView) {\n      divRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\",\n        inline: \"nearest\"\n      });\n    }\n  };\n\n  var handleSelectGood = function handleSelectGood(event, good) {\n    event.preventDefault();\n    event.stopPropagation();\n    props.onSelectGood(good);\n  };\n\n  var handleSelectCountry = function handleSelectCountry(event, countryCode) {\n    event.preventDefault();\n    event.stopPropagation();\n    props.onSelectCountry(countryCode);\n  };\n\n  var parseURLs = function parseURLs(text) {\n    var url = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi;\n    var urls = text.match(url);\n    return urls.map(function (url, index) {\n      return __jsx(\"a\", {\n        key: url + index,\n        href: url,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, \"Link to evidence\");\n    });\n  };\n\n  var clearStates = function clearStates() {\n    sdgs.map(function (e) {\n      return e.open = false;\n    });\n    setSdgs(_toConsumableArray(sdgs));\n    setOpenCountries({\n      development: false,\n      deployment: false,\n      deploymentsInCountry: false,\n      developmentsInCountry: false\n    });\n  };\n\n  var scrollToInfo = function scrollToInfo() {\n    infoRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"end\"\n    });\n  };\n\n  useImperativeHandle(ref, function () {\n    return {\n      clearStatesFromParent: clearStates,\n      scrollFromParent: scrollToInfo,\n      scrollFromMap: scrollHandle\n    };\n  });\n  return __jsx(\"div\", {\n    className: \"infoGood\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, props.SearchBox), __jsx(\"div\", {\n    className: \"controls\",\n    onClick: scrollHandle,\n    ref: infoRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    id: \"arrow-up\",\n    className: !menuInView ? \"arrow up active\" : \"arrow up\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    id: \"hamburger\",\n    className: !menuInView ? \"hamburger-icon\" : \"hamburger-icon active\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"bar1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  })), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, menuInView ? \"\" : \"Tap to see filters and info\")), __jsx(\"ul\", {\n    className: \"filters\",\n    ref: divRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, Object.keys(props.visibleLayer).map(function (layer, index) {\n    return __jsx(\"li\", {\n      id: layer,\n      key: layer + index,\n      onClick: function onClick(e) {\n        return handleLayerToggle(e, layer);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, props.visibleLayer[layer] ? layer : \"\"), __jsx(\"a\", {\n      href: \"#\",\n      onClick: function onClick(e) {\n        return e.preventDefault();\n      },\n      className: layer + (props.visibleLayer[layer] ? \" active\" : \"\"),\n      style: props.visibleLayer[layer] ? buttonStyles[layer] : {\n        background: \"none\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, props.visibleLayer[layer] ? \"\" : layer));\n  }), __jsx(InView, {\n    as: \"div\",\n    onChange: function onChange(inView) {\n      return setMenuInView(inView);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  })), Object.keys(props.selectedCountry).length != 0 && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, props.selectedCountry.pathfinder && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, props.selectedCountry.name), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, \"\\u2705\\xA0\\xA0DPG Pathfinder Country\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, \"Status: \"), props.selectedCountry.pathfinder.Status), props.selectedCountry.pathfinder.Sector && __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, \"Sector: \"), props.selectedCountry.pathfinder.Sector), props.selectedCountry.pathfinder.Comments && __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, \"Comments: \"), props.selectedCountry.pathfinder.Comments))), props.selectedCountry.deployments.length > 0 && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: \"collapsable-text\",\n    onClick: function onClick() {\n      return toggleCountries(\"deploymentsInCountry\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, \"There \", props.selectedCountry.deployments.length > 1 ? \"are\" : \"is\", \" \", props.selectedCountry.deployments.length, \" digital public good\", props.selectedCountry.deployments.length > 1 ? \"s\" : \"\", \" deployed in\", \" \", props.selectedCountry.name, __jsx(\"span\", {\n    className: openCountries.deploymentsInCountry ? \"arrow active up\" : \"arrow active down\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  })), openCountries.deploymentsInCountry && props.selectedCountry.deployments.map(function (good, i) {\n    return __jsx(\"a\", {\n      className: props.selectedCountry.deployments.length - 1 == i ? \"last\" : \"\",\n      key: good.name + i,\n      onClick: function onClick(e) {\n        return handleSelectGood(e, good.name);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, good.name);\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, \"DPGs deployed in this country are related to\", \" \", props.selectedCountry.sdgsDeployments.filter(function (sdg) {\n    return sdg[1].dpgs >= 1;\n  }).length, \" \", \"of 17(\", (props.selectedCountry.sdgsDeployments.filter(function (sdg) {\n    return sdg[1].dpgs >= 1;\n  }).length / 17 * 100).toFixed(1), \"%) Sustainable Development Goals\"), __jsx(\"div\", {\n    className: \"chart-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, __jsx(Chart, {\n    width: \"100%\",\n    height: \"600px\",\n    chartType: \"BarChart\",\n    loader: __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 27\n      }\n    }, \"Loading Chart\"),\n    data: [[\"SDG\", \"DPGs\", {\n      role: \"annotation\",\n      calc: \"stringify\",\n      type: \"string\"\n    }]].concat(_toConsumableArray(props.selectedCountry.sdgsDeployments.map(function (sdg) {\n      return [sdg[0], sdg[1].dpgs, sdg[1].ann + \": \" + sdg[1].dpgs];\n    }))),\n    options: {\n      animation: {\n        startup: true,\n        easing: \"out\",\n        duration: 500\n      },\n      annotations: {\n        textStyle: {\n          fontSize: 11,\n          bold: false\n        }\n      },\n      colors: [\"#3333AB\"],\n      chartArea: {\n        width: \"85%\",\n        height: \"90%\",\n        top: 0\n      },\n      hAxis: {\n        baselineColor: \"#cccccc\",\n        titleTextStyle: {\n          italic: false\n        },\n        title: \"Digital public goods\",\n        minValue: 0\n      },\n      legend: {\n        position: \"none\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }), __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }, \"Types of DPGs deployed in \", props.selectedCountry.name), __jsx(Chart, {\n    width: \"100%\",\n    height: \"170px\",\n    chartType: \"BarChart\",\n    loader: __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 27\n      }\n    }, \"Loading Chart\"),\n    data: [[\"SDG\", \"DPGs\", {\n      role: \"annotation\",\n      calc: \"stringify\"\n    }]].concat(_toConsumableArray(props.selectedCountry.typeDeployments.map(function (el) {\n      return [].concat(_toConsumableArray(el), [el[0] + \": \" + el[1]]);\n    }))),\n    options: {\n      animation: {\n        startup: true,\n        easing: \"out\",\n        duration: 500\n      },\n      colors: [\"#3333AB\"],\n      chartArea: {\n        width: \"85%\",\n        height: \"85%\",\n        top: 0\n      },\n      hAxis: {\n        baselineColor: \"#cccccc\",\n        titleTextStyle: {\n          italic: false\n        },\n        title: \"Digital public goods\",\n        minValue: 0\n      },\n      vAxis: {\n        textPosition: \"none\"\n      },\n      legend: {\n        position: \"none\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }))), props.selectedCountry.developments.length > 0 && __jsx(\"div\", {\n    className: \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    className: \"collapsable-text\",\n    onClick: function onClick() {\n      return toggleCountries(\"developmentsInCountry\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, \"There \", props.selectedCountry.developments.length > 1 ? \"are\" : \"is\", \" \", props.selectedCountry.developments.length, \" digital public good\", props.selectedCountry.developments.length > 1 ? \"s\" : \"\", \" developed in\", \" \", props.selectedCountry.name, __jsx(\"span\", {\n    className: openCountries.developmentsInCountry ? \"arrow active up\" : \"arrow active down\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 17\n    }\n  })), openCountries.developmentsInCountry && props.selectedCountry.developments.map(function (good, i) {\n    return __jsx(\"a\", {\n      className: props.selectedCountry.developments.length - 1 == i ? \"last\" : \"\",\n      key: good.name + i,\n      onClick: function onClick(e) {\n        return handleSelectGood(e, good.name);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 19\n      }\n    }, good.name);\n  }))), Object.keys(props.selectedGood).length != 0 && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"goodContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    className: \"goodName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, props.selectedGood.name), __jsx(\"div\", {\n    className: \"goodLinks\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, props.selectedGood.website && __jsx(\"a\", {\n    href: props.selectedGood.website,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: webSymbol,\n    width: \"30px\",\n    height: \"30px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 19\n    }\n  })), props.selectedGood.repositoryURL && __jsx(\"a\", {\n    href: props.selectedGood.repositoryURL,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: ghLogo,\n    width: \"30px\",\n    height: \"30px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 19\n    }\n  }))), __jsx(\"p\", {\n    className: \"goodDesc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, props.selectedGood.description)), __jsx(\"ul\", {\n    className: \"goodContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"p\", {\n    className: \"text-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }\n  }, \"Type of Digital Public Good\"), [\"content\", \"data\", \"software\", \"standard\", \"AI model\"].map(function (item) {\n    if (props.selectedGood.type.includes(item)) {\n      return __jsx(\"li\", {\n        key: \"type-\" + item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 24\n        }\n      }, \"\\u2705\\xA0Open \", item);\n    } else {\n      return __jsx(\"li\", {\n        key: \"type-\" + item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 19\n        }\n      }, __jsx(\"svg\", {\n        width: \"18\",\n        height: \"18\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }\n      }, __jsx(\"rect\", {\n        width: \"18\",\n        height: \"18\",\n        fillOpacity: \"0\",\n        className: \"rect\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 23\n        }\n      })), \"\\xA0Open \", item);\n    }\n  })), __jsx(\"div\", {\n    className: \"goodContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: \"text-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }, \"Relevant Sustainable Development Goals:\"), props.selectedGood[\"SDGs\"].map(function (item) {\n    return __jsx(\"div\", {\n      key: \"SDG-\" + item.SDGNumber,\n      className: \"header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      className: \"collapsable-text\",\n      onClick: function onClick(e) {\n        return toggleEvidence(item.SDGNumber - 1);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 19\n      }\n    }, sdgs[item.SDGNumber - 1].name, \" \", __jsx(\"span\", {\n      className: sdgs[item.SDGNumber - 1].open ? \"arrow active up\" : \"arrow active down\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 21\n      }\n    })), item.evidenceText && sdgs[item.SDGNumber - 1].open && __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 21\n      }\n    }, item.evidenceText), item.evidenceURL && sdgs[item.SDGNumber - 1].open && parseURLs(item.evidenceURL));\n  })), __jsx(\"div\", {\n    className: \"goodContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 11\n    }\n  }, Object.keys(props.selectedGood.locations.deploymentCountries).length > 0 && __jsx(\"div\", {\n    className: \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: \"collapsable-text\",\n    onClick: function onClick(e) {\n      return toggleCountries(\"deployment\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 17\n    }\n  }, \"Deployed in \" + Object.keys(props.selectedGood.locations.deploymentCountries).length + \" of 249 countries:\", \" \", __jsx(\"span\", {\n    className: openCountries.deployment ? \"arrow active up\" : \"arrow active down\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 19\n    }\n  })), openCountries.deployment && Object.entries(props.selectedGood.locations.deploymentCountries).map(function (country, i) {\n    return __jsx(\"a\", {\n      className: Object.entries(props.selectedGood.locations.deploymentCountries).length - 1 == i ? \"last\" : \"\",\n      onClick: function onClick(e) {\n        return handleSelectCountry(e, country[0]);\n      },\n      key: \"deploy-\" + country,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 25\n      }\n    }, country[1]);\n  })), Object.keys(props.selectedGood.locations.developmentCountries).length > 0 && __jsx(\"div\", {\n    className: \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: \"collapsable-text\",\n    onClick: function onClick(e) {\n      return toggleCountries(\"development\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 17\n    }\n  }, \"Developed in \" + Object.keys(props.selectedGood.locations.developmentCountries).length + (Object.keys(props.selectedGood.locations.developmentCountries).length > 1 ? \" countries:\" : \" country:\"), \" \", __jsx(\"span\", {\n    className: openCountries.development ? \"arrow active up\" : \"arrow active down\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 19\n    }\n  })), openCountries.development && Object.entries(props.selectedGood.locations.developmentCountries).map(function (country, i) {\n    return __jsx(\"a\", {\n      className: Object.entries(props.selectedGood.locations.developmentCountries).length - 1 == i ? \"last\" : \"\",\n      onClick: function onClick(e) {\n        return handleSelectCountry(e, country[0]);\n      },\n      key: \"develop-\" + country,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 25\n      }\n    }, country[1]);\n  })))), __jsx(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }\n  }));\n}, \"QlRy7dSMeZ/878tXnmrCbxkVlPo=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = InfoComponent;\nexport default InfoComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InfoComponent$forwardRef\");\n$RefreshReg$(_c2, \"InfoComponent\");","map":{"version":3,"sources":["/home/rolikasi/outreachy/digital-public-goods-map/components/infoComponent.js"],"names":["React","useState","forwardRef","useImperativeHandle","useRef","webSymbol","ghLogo","InView","Footer","Chart","confirmedPattern","exploratoryPattern","buttonStyles","backgroundImage","backgroundColor","sdgsDefault","name","open","InfoComponent","props","ref","development","deployment","deploymentsInCountry","developmentsInCountry","openCountries","setOpenCountries","menuInView","setMenuInView","sdgs","setSdgs","toggleEvidence","i","handleLayerToggle","e","layer","preventDefault","stopPropagation","onLayerToggle","toggleCountries","type","prevState","divRef","infoRef","scrollHandle","current","scrollIntoView","behavior","block","inline","handleSelectGood","event","good","onSelectGood","handleSelectCountry","countryCode","onSelectCountry","parseURLs","text","url","urls","match","map","index","clearStates","scrollToInfo","clearStatesFromParent","scrollFromParent","scrollFromMap","SearchBox","Object","keys","visibleLayer","background","inView","selectedCountry","length","pathfinder","Status","Sector","Comments","deployments","sdgsDeployments","filter","sdg","dpgs","toFixed","role","calc","ann","animation","startup","easing","duration","annotations","textStyle","fontSize","bold","colors","chartArea","width","height","top","hAxis","baselineColor","titleTextStyle","italic","title","minValue","legend","position","typeDeployments","el","vAxis","textPosition","developments","selectedGood","website","repositoryURL","description","item","includes","SDGNumber","evidenceText","evidenceURL","locations","deploymentCountries","entries","country","developmentCountries"],"mappings":"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","sourcesContent":["import React, {useState, forwardRef, useImperativeHandle, useRef} from \"react\";\nimport webSymbol from \"../public/globe.png\";\nimport ghLogo from \"../public/github.png\";\nimport {InView} from \"react-intersection-observer\";\nimport Footer from \"./footer\";\nimport Chart from \"react-google-charts\";\nimport confirmedPattern from \"../public/confirmed.svg\";\nimport exploratoryPattern from \"../public/exploratory.svg\";\n\nconst buttonStyles = {\n  \"Pathfinders Exploratory\": {\n    backgroundImage: `url(${exploratoryPattern})`,\n  },\n  \"Pathfinders Confirmed\": {\n    backgroundImage: `url(${confirmedPattern})`,\n  },\n  \"DPGs developed\": {\n    backgroundColor: \"#FF952A\",\n  },\n  \"DPGs deployed\": {\n    backgroundColor: \"#3333AB\",\n  },\n};\nconst sdgsDefault = [\n  {name: \"1. No Poverty\", open: false},\n  {name: \"2. Zero Hunger\", open: false},\n  {name: \"3. Good Health and Well-being\", open: false},\n  {name: \"4. Quality Education\", open: false},\n  {name: \"5. Gender Equality\", open: false},\n  {name: \"6. Clean Water and Sanitation\", open: false},\n  {name: \"7. Affordable and Clean Energy\", open: false},\n  {name: \"8. Decent Work and Economic Growth\", open: false},\n  {name: \"9. Industry, Innovation and Infrastructure\", open: false},\n  {name: \"10. Reduced Inequality\", open: false},\n  {name: \"11. Sustainable Cities and Communities\", open: false},\n  {name: \"12. Responsible Consumption and Production\", open: false},\n  {name: \"13. Climate Action\", open: false},\n  {name: \"14. Life Below Water\", open: false},\n  {name: \"15. Life on Land\", open: false},\n  {name: \"16. Peace and Justice Strong Institutions\", open: false},\n  {name: \"17. Partnerships to achieve the Goal\", open: false},\n];\nconst InfoComponent = forwardRef((props, ref) => {\n  const [openCountries, setOpenCountries] = useState({\n    development: false,\n    deployment: false,\n    deploymentsInCountry: false,\n    developmentsInCountry: false,\n  });\n\n  const [menuInView, setMenuInView] = useState(false);\n  const [sdgs, setSdgs] = useState([...sdgsDefault]);\n  const toggleEvidence = (i) => {\n    sdgs[i].open = !sdgs[i].open;\n    setSdgs([...sdgs]);\n  };\n  const handleLayerToggle = (e, layer) => {\n    e.preventDefault();\n    e.stopPropagation();\n    props.onLayerToggle(layer);\n  };\n\n  const toggleCountries = (type) => {\n    setOpenCountries((prevState) => ({...prevState, [type]: !prevState[type]}));\n  };\n  const divRef = useRef(null);\n  const infoRef = useRef(null);\n  const scrollHandle = () => {\n    if (!menuInView) {\n      divRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\",\n        inline: \"nearest\",\n      });\n    }\n  };\n  const handleSelectGood = (event, good) => {\n    event.preventDefault();\n    event.stopPropagation();\n    props.onSelectGood(good);\n  };\n  const handleSelectCountry = (event, countryCode) => {\n    event.preventDefault();\n    event.stopPropagation();\n    props.onSelectCountry(countryCode);\n  };\n  const parseURLs = (text) => {\n    const url = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi;\n    let urls = text.match(url);\n    return urls.map((url, index) => (\n      <a key={url + index} href={url} target=\"_blank\" rel=\"noreferrer\">\n        Link to evidence\n      </a>\n    ));\n  };\n  const clearStates = () => {\n    sdgs.map((e) => (e.open = false));\n    setSdgs([...sdgs]);\n    setOpenCountries({\n      development: false,\n      deployment: false,\n      deploymentsInCountry: false,\n      developmentsInCountry: false,\n    });\n  };\n  const scrollToInfo = () => {\n    infoRef.current.scrollIntoView({behavior: \"smooth\", block: \"end\"});\n  };\n  useImperativeHandle(ref, () => {\n    return {\n      clearStatesFromParent: clearStates,\n      scrollFromParent: scrollToInfo,\n      scrollFromMap: scrollHandle,\n    };\n  });\n  return (\n    <div className=\"infoGood\">\n      <div>{props.SearchBox}</div>\n      <div className=\"controls\" onClick={scrollHandle} ref={infoRef}>\n        <span id=\"arrow-up\" className={!menuInView ? \"arrow up active\" : \"arrow up\"} />\n        <div\n          id=\"hamburger\"\n          className={!menuInView ? \"hamburger-icon\" : \"hamburger-icon active\"}\n        >\n          <div className=\"bar1\"></div>\n        </div>\n        <span>{menuInView ? \"\" : \"Tap to see filters and info\"}</span>\n      </div>\n\n      <ul className=\"filters\" ref={divRef}>\n        {Object.keys(props.visibleLayer).map((layer, index) => (\n          <li id={layer} key={layer + index} onClick={(e) => handleLayerToggle(e, layer)}>\n            <span>{props.visibleLayer[layer] ? layer : \"\"}</span>\n            <a\n              href=\"#\"\n              onClick={(e) => e.preventDefault()}\n              className={layer + (props.visibleLayer[layer] ? \" active\" : \"\")}\n              style={\n                props.visibleLayer[layer] ? buttonStyles[layer] : {background: \"none\"}\n              }\n            >\n              {props.visibleLayer[layer] ? \"\" : layer}\n            </a>\n          </li>\n        ))}\n        <InView as=\"div\" onChange={(inView) => setMenuInView(inView)}></InView>\n      </ul>\n\n      {Object.keys(props.selectedCountry).length != 0 && (\n        <div>\n          {props.selectedCountry.pathfinder && (\n            <div>\n              <h3>{props.selectedCountry.name}</h3>\n              <span>✅&nbsp;&nbsp;DPG Pathfinder Country</span>\n              <ul>\n                <li>\n                  <b>Status: </b>\n                  {props.selectedCountry.pathfinder.Status}\n                </li>\n                {props.selectedCountry.pathfinder.Sector && (\n                  <li>\n                    <b>Sector: </b>\n                    {props.selectedCountry.pathfinder.Sector}\n                  </li>\n                )}\n\n                {props.selectedCountry.pathfinder.Comments && (\n                  <li>\n                    <b>Comments: </b>\n                    {props.selectedCountry.pathfinder.Comments}\n                  </li>\n                )}\n              </ul>\n            </div>\n          )}\n\n          {props.selectedCountry.deployments.length > 0 && (\n            <div>\n              <div className=\"header\">\n                <p\n                  className=\"collapsable-text\"\n                  onClick={() => toggleCountries(\"deploymentsInCountry\")}\n                >\n                  There {props.selectedCountry.deployments.length > 1 ? \"are\" : \"is\"}{\" \"}\n                  {props.selectedCountry.deployments.length} digital public good\n                  {props.selectedCountry.deployments.length > 1 ? \"s\" : \"\"} deployed in{\" \"}\n                  {props.selectedCountry.name}\n                  <span\n                    className={\n                      openCountries.deploymentsInCountry\n                        ? \"arrow active up\"\n                        : \"arrow active down\"\n                    }\n                  ></span>\n                </p>\n                {openCountries.deploymentsInCountry &&\n                  props.selectedCountry.deployments.map((good, i) => (\n                    <a\n                      className={\n                        props.selectedCountry.deployments.length - 1 == i ? \"last\" : \"\"\n                      }\n                      key={good.name + i}\n                      onClick={(e) => handleSelectGood(e, good.name)}\n                    >\n                      {good.name}\n                    </a>\n                  ))}\n              </div>\n\n              <p>\n                DPGs deployed in this country are related to{\" \"}\n                {\n                  props.selectedCountry.sdgsDeployments.filter((sdg) => sdg[1].dpgs >= 1)\n                    .length\n                }{\" \"}\n                of 17(\n                {(\n                  (props.selectedCountry.sdgsDeployments.filter((sdg) => sdg[1].dpgs >= 1)\n                    .length /\n                    17) *\n                  100\n                ).toFixed(1)}\n                %) Sustainable Development Goals\n              </p>\n              <div className={\"chart-container\"}>\n                <Chart\n                  width={\"100%\"}\n                  height={\"600px\"}\n                  chartType=\"BarChart\"\n                  loader={<div>Loading Chart</div>}\n                  data={[\n                    [\n                      \"SDG\",\n                      \"DPGs\",\n                      {role: \"annotation\", calc: \"stringify\", type: \"string\"},\n                    ],\n                    ...props.selectedCountry.sdgsDeployments.map((sdg) => [\n                      sdg[0],\n                      sdg[1].dpgs,\n                      sdg[1].ann + \": \" + sdg[1].dpgs,\n                    ]),\n                  ]}\n                  options={{\n                    animation: {\n                      startup: true,\n                      easing: \"out\",\n                      duration: 500,\n                    },\n                    annotations: {\n                      textStyle: {\n                        fontSize: 11,\n                        bold: false,\n                      },\n                    },\n                    colors: [\"#3333AB\"],\n                    chartArea: {width: \"85%\", height: \"90%\", top: 0},\n                    hAxis: {\n                      baselineColor: \"#cccccc\",\n                      titleTextStyle: {italic: false},\n                      title: \"Digital public goods\",\n                      minValue: 0,\n                    },\n                    legend: {position: \"none\"},\n                  }}\n                />\n\n                <b>Types of DPGs deployed in {props.selectedCountry.name}</b>\n                <Chart\n                  width={\"100%\"}\n                  height={\"170px\"}\n                  chartType=\"BarChart\"\n                  loader={<div>Loading Chart</div>}\n                  data={[\n                    [\"SDG\", \"DPGs\", {role: \"annotation\", calc: \"stringify\"}],\n                    ...props.selectedCountry.typeDeployments.map((el) => [\n                      ...el,\n                      el[0] + \": \" + el[1],\n                    ]),\n                  ]}\n                  options={{\n                    animation: {\n                      startup: true,\n                      easing: \"out\",\n                      duration: 500,\n                    },\n                    colors: [\"#3333AB\"],\n                    chartArea: {width: \"85%\", height: \"85%\", top: 0},\n                    hAxis: {\n                      baselineColor: \"#cccccc\",\n                      titleTextStyle: {italic: false},\n                      title: \"Digital public goods\",\n                      minValue: 0,\n                    },\n                    vAxis: {\n                      textPosition: \"none\",\n                    },\n                    legend: {position: \"none\"},\n                  }}\n                />\n              </div>\n            </div>\n          )}\n          {props.selectedCountry.developments.length > 0 && (\n            <div className=\"header\">\n              <p\n                className=\"collapsable-text\"\n                onClick={() => toggleCountries(\"developmentsInCountry\")}\n              >\n                There {props.selectedCountry.developments.length > 1 ? \"are\" : \"is\"}{\" \"}\n                {props.selectedCountry.developments.length} digital public good\n                {props.selectedCountry.developments.length > 1 ? \"s\" : \"\"} developed in{\" \"}\n                {props.selectedCountry.name}\n                <span\n                  className={\n                    openCountries.developmentsInCountry\n                      ? \"arrow active up\"\n                      : \"arrow active down\"\n                  }\n                ></span>\n              </p>\n              {openCountries.developmentsInCountry &&\n                props.selectedCountry.developments.map((good, i) => (\n                  <a\n                    className={\n                      props.selectedCountry.developments.length - 1 == i ? \"last\" : \"\"\n                    }\n                    key={good.name + i}\n                    onClick={(e) => handleSelectGood(e, good.name)}\n                  >\n                    {good.name}\n                  </a>\n                ))}\n            </div>\n          )}\n        </div>\n      )}\n      {Object.keys(props.selectedGood).length != 0 && (\n        <div>\n          <div className=\"goodContainer\">\n            <h2 className=\"goodName\">{props.selectedGood.name}</h2>\n            <div className=\"goodLinks\">\n              {props.selectedGood.website && (\n                <a href={props.selectedGood.website} target=\"_blank\" rel=\"noreferrer\">\n                  <img src={webSymbol} width=\"30px\" height=\"30px\" />\n                </a>\n              )}\n              {props.selectedGood.repositoryURL && (\n                <a\n                  href={props.selectedGood.repositoryURL}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <img src={ghLogo} width=\"30px\" height=\"30px\" />\n                </a>\n              )}\n            </div>\n            <p className=\"goodDesc\">{props.selectedGood.description}</p>\n          </div>\n          <ul className=\"goodContainer\">\n            {\" \"}\n            <p className=\"text-bold\">Type of Digital Public Good</p>\n            {[\"content\", \"data\", \"software\", \"standard\", \"AI model\"].map((item) => {\n              if (props.selectedGood.type.includes(item)) {\n                return <li key={\"type-\" + item}>✅&nbsp;Open {item}</li>;\n              } else {\n                return (\n                  <li key={\"type-\" + item}>\n                    <svg width=\"18\" height=\"18\">\n                      <rect width=\"18\" height=\"18\" fillOpacity=\"0\" className=\"rect\" />\n                    </svg>\n                    &nbsp;Open {item}\n                  </li>\n                );\n              }\n            })}\n          </ul>\n          <div className=\"goodContainer\">\n            <p className=\"text-bold\">Relevant Sustainable Development Goals:</p>\n            {props.selectedGood[\"SDGs\"].map((item) => {\n              return (\n                <div key={\"SDG-\" + item.SDGNumber} className=\"header\">\n                  <p\n                    className=\"collapsable-text\"\n                    onClick={(e) => toggleEvidence(item.SDGNumber - 1)}\n                  >\n                    {sdgs[item.SDGNumber - 1].name}{\" \"}\n                    <span\n                      className={\n                        sdgs[item.SDGNumber - 1].open\n                          ? \"arrow active up\"\n                          : \"arrow active down\"\n                      }\n                    ></span>\n                  </p>\n                  {item.evidenceText && sdgs[item.SDGNumber - 1].open && (\n                    <p>{item.evidenceText}</p>\n                  )}\n                  {item.evidenceURL &&\n                    sdgs[item.SDGNumber - 1].open &&\n                    parseURLs(item.evidenceURL)}\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"goodContainer\">\n            {Object.keys(props.selectedGood.locations.deploymentCountries).length > 0 && (\n              <div className=\"header\">\n                <p\n                  className=\"collapsable-text\"\n                  onClick={(e) => toggleCountries(\"deployment\")}\n                >\n                  {\"Deployed in \" +\n                    Object.keys(props.selectedGood.locations.deploymentCountries).length +\n                    \" of 249 countries:\"}{\" \"}\n                  <span\n                    className={\n                      openCountries.deployment ? \"arrow active up\" : \"arrow active down\"\n                    }\n                  ></span>\n                </p>\n\n                {openCountries.deployment &&\n                  Object.entries(props.selectedGood.locations.deploymentCountries).map(\n                    (country, i) => {\n                      return (\n                        <a\n                          className={\n                            Object.entries(\n                              props.selectedGood.locations.deploymentCountries\n                            ).length -\n                              1 ==\n                            i\n                              ? \"last\"\n                              : \"\"\n                          }\n                          onClick={(e) => handleSelectCountry(e, country[0])}\n                          key={\"deploy-\" + country}\n                        >\n                          {country[1]}\n                        </a>\n                      );\n                    }\n                  )}\n              </div>\n            )}\n            {Object.keys(props.selectedGood.locations.developmentCountries).length >\n              0 && (\n              <div className=\"header\">\n                <p\n                  className=\"collapsable-text\"\n                  onClick={(e) => toggleCountries(\"development\")}\n                >\n                  {\"Developed in \" +\n                    Object.keys(props.selectedGood.locations.developmentCountries)\n                      .length +\n                    (Object.keys(props.selectedGood.locations.developmentCountries)\n                      .length > 1\n                      ? \" countries:\"\n                      : \" country:\")}{\" \"}\n                  <span\n                    className={\n                      openCountries.development ? \"arrow active up\" : \"arrow active down\"\n                    }\n                  ></span>\n                </p>\n\n                {openCountries.development &&\n                  Object.entries(props.selectedGood.locations.developmentCountries).map(\n                    (country, i) => {\n                      return (\n                        <a\n                          className={\n                            Object.entries(\n                              props.selectedGood.locations.developmentCountries\n                            ).length -\n                              1 ==\n                            i\n                              ? \"last\"\n                              : \"\"\n                          }\n                          onClick={(e) => handleSelectCountry(e, country[0])}\n                          key={\"develop-\" + country}\n                        >\n                          {country[1]}\n                        </a>\n                      );\n                    }\n                  )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      <Footer />\n    </div>\n  );\n});\n\nexport default InfoComponent;\n"]},"metadata":{},"sourceType":"module"}