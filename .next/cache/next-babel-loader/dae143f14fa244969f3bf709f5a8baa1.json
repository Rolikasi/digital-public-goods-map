{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { forwardRef, useImperativeHandle, useState, useRef, useEffect } from \"react\";\nimport dpgBadge from \"../public/dpgBadge.svg\";\nimport UseWindowDimensions from \"./UseWindowDimensions\";\nvar SearchBox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _useState = useState(false),\n      menuOpen = _useState[0],\n      setMenuOpen = _useState[1];\n\n  var textRef = useRef();\n\n  var _useState2 = useState(props.selectedGood ? props.selectedGood : props.selectedCountry ? props.selectedCountry : \"\"),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var _UseWindowDimensions = UseWindowDimensions(),\n      width = _UseWindowDimensions.width;\n\n  var handleMouseOver = function handleMouseOver() {\n    !menuOpen && setMenuOpen(true);\n  };\n\n  var handleMouseLeave = function handleMouseLeave() {\n    menuOpen && setMenuOpen(false);\n  };\n\n  var handleMenuClick = function handleMenuClick() {\n    !menuOpen && setMenuOpen(true);\n  };\n\n  var handleMenuSelect = function handleMenuSelect() {\n    menuOpen && setMenuOpen(false);\n  };\n\n  var _useState3 = useState(false),\n      searchFocused = _useState3[0],\n      setSearchFocused = _useState3[1];\n\n  var onFocus = function onFocus() {\n    return setSearchFocused(true);\n  };\n\n  var _onBlur = function onBlur() {\n    return setSearchFocused(false);\n  };\n\n  var handleSelect = function handleSelect(item, event) {\n    event.preventDefault(); // Here, we invoke the callback with the new value\n\n    setInputValue(item.name);\n    props.onSelectGood(item);\n  };\n\n  var handleSelectCountry = function handleSelectCountry(item, event) {\n    event.preventDefault(); // Here, we invoke the callback with the new value\n\n    setInputValue(item.name);\n    props.onSelectCountry(item.code);\n  };\n\n  var handleClear = function handleClear(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    setInputValue(\"\");\n    props.clearSelectedGood();\n  };\n\n  var handleChangeInput = function handleChangeInput(event) {\n    setInputValue(event.target.value);\n  };\n\n  var handleInputSize = function handleInputSize(element) {\n    element.style.height = \"2rem\";\n    element.style.height = element.scrollHeight + \"px\";\n  };\n\n  var changeInput = function changeInput(value) {\n    setInputValue(value);\n  };\n\n  useImperativeHandle(ref, function () {\n    return {\n      changeInput: changeInput\n    };\n  });\n  useEffect(function () {\n    handleInputSize(textRef.current); // code to run after render goes here\n  });\n  return __jsx(\"div\", {\n    className: \"selectContainer\"\n  }, __jsx(\"div\", {\n    onClick: handleMenuClick,\n    onMouseOver: handleMouseOver,\n    onMouseLeave: handleMouseLeave,\n    id: \"dg-menu\"\n  }, __jsx(\"textarea\", {\n    ref: textRef,\n    onFocus: onFocus,\n    onBlur: function onBlur(e) {\n      return _onBlur(e);\n    },\n    className: \"searchInput\",\n    type: \"text\",\n    value: inputValue,\n    placeholder: \"Select a digital good or country\",\n    onChange: function onChange(e) {\n      return handleChangeInput(e);\n    }\n  }), __jsx(\"span\", {\n    className: menuOpen || searchFocused ? \"arrow up active\" : \"arrow down active\"\n  }), __jsx(\"div\", {\n    onClick: handleMenuSelect,\n    onMouseLeave: handleMouseLeave,\n    id: \"dg-menu-dropdown\",\n    className: menuOpen || searchFocused ? \"active\" : \"\"\n  }, props.goods.filter(function (el) {\n    return el.name.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1;\n  }).sort(function (a, b) {\n    return a.name.localeCompare(b.name);\n  }).map(function (item, index) {\n    return __jsx(\"a\", {\n      key: item.name + index,\n      href: \"#\",\n      onClick: function onClick(e) {\n        return handleSelect(item, e);\n      }\n    }, item.name, width > 1008 && __jsx(\"img\", {\n      width: \"45px\",\n      height: \"auto\",\n      src: dpgBadge\n    }));\n  }), Object.values(props.countries).filter(function (el) {\n    return el.name.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1;\n  }).sort(function (a, b) {\n    return a.name.localeCompare(b.name);\n  }).map(function (item, index) {\n    return __jsx(\"a\", {\n      key: item.name + index,\n      href: \"#\",\n      onClick: function onClick(e) {\n        return handleSelectCountry(item, e);\n      }\n    }, item.name);\n  }))), __jsx(\"div\", {\n    className: \"closeIcon\",\n    onClick: function onClick(e) {\n      return handleClear(e);\n    }\n  }, __jsx(\"span\", null, \"x\")));\n});\nexport default SearchBox;","map":null,"metadata":{},"sourceType":"module"}