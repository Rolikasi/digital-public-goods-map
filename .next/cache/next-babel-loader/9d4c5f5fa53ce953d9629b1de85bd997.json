{"ast":null,"code":"var _jsxFileName = \"/home/rolikasi/outreachy/digital-public-goods-map/components/searchBox.js\";\nvar __jsx = React.createElement;\nimport React, { forwardRef, useImperativeHandle, useState, useRef, useEffect } from \"react\";\nimport dpgBadge from \"../public/dpgBadge.svg\";\nimport UseWindowDimensions from \"./UseWindowDimensions\";\nconst SearchBox = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    0: menuOpen,\n    1: setMenuOpen\n  } = useState(false);\n  const textRef = useRef();\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState(props.selectedGood ? props.selectedGood : props.selectedCountry ? props.selectedCountry : \"\");\n  const {\n    width\n  } = UseWindowDimensions();\n\n  const handleMouseOver = () => {\n    !menuOpen && setMenuOpen(true);\n  };\n\n  const handleMouseLeave = () => {\n    menuOpen && setMenuOpen(false);\n  };\n\n  const handleMenuClick = () => {\n    !menuOpen && setMenuOpen(true);\n  };\n\n  const handleMenuSelect = () => {\n    menuOpen && setMenuOpen(false);\n  };\n\n  const {\n    0: searchFocused,\n    1: setSearchFocused\n  } = useState(false);\n\n  const onFocus = () => setSearchFocused(true);\n\n  const onBlur = () => setSearchFocused(false);\n\n  const handleSelect = (item, event) => {\n    event.preventDefault(); // Here, we invoke the callback with the new value\n\n    setInputValue(item.name);\n    props.onSelectGood(item);\n  };\n\n  const handleSelectCountry = (item, event) => {\n    event.preventDefault(); // Here, we invoke the callback with the new value\n\n    setInputValue(item.name);\n    props.onSelectCountry(item.code);\n  };\n\n  const handleClear = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    setInputValue(\"\");\n    props.clearSelectedGood();\n  };\n\n  const handleChangeInput = event => {\n    setInputValue(event.target.value);\n  };\n\n  const handleInputSize = element => {\n    element.style.height = \"2rem\";\n    element.style.height = element.scrollHeight + \"px\";\n  };\n\n  const changeInput = value => {\n    setInputValue(value);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      changeInput: changeInput\n    };\n  });\n  useEffect(() => {\n    handleInputSize(textRef.current); // code to run after render goes here\n  });\n  return __jsx(\"div\", {\n    className: \"selectContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    onClick: handleMenuClick,\n    onMouseOver: handleMouseOver,\n    onMouseLeave: handleMouseLeave,\n    id: \"dg-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(\"textarea\", {\n    ref: textRef,\n    onFocus: onFocus,\n    onBlur: e => onBlur(e),\n    className: \"searchInput\",\n    type: \"text\",\n    value: inputValue,\n    placeholder: \"Select a digital good or country\",\n    onChange: e => handleChangeInput(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: menuOpen || searchFocused ? \"arrow up active\" : \"arrow down active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    onClick: handleMenuSelect,\n    onMouseLeave: handleMouseLeave,\n    id: \"dg-menu-dropdown\",\n    className: menuOpen || searchFocused ? \"active\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, props.goods.filter(el => el.name.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1).sort((a, b) => a.name.localeCompare(b.name)).map((item, index) => __jsx(\"a\", {\n    key: item.name + index,\n    href: \"#\",\n    onClick: e => handleSelect(item, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, item.name, width > 1008 && __jsx(\"img\", {\n    width: \"45px\",\n    height: \"auto\",\n    src: dpgBadge,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 34\n    }\n  }))), Object.values(props.countries).filter(el => el.name.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1).sort((a, b) => a.name.localeCompare(b.name)).map((item, index) => __jsx(\"a\", {\n    key: item.name + index,\n    href: \"#\",\n    onClick: e => handleSelectCountry(item, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, item.name)))), __jsx(\"div\", {\n    className: \"closeIcon\",\n    onClick: e => handleClear(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"x\")));\n});\nexport default SearchBox;","map":{"version":3,"sources":["/home/rolikasi/outreachy/digital-public-goods-map/components/searchBox.js"],"names":["React","forwardRef","useImperativeHandle","useState","useRef","useEffect","dpgBadge","UseWindowDimensions","SearchBox","props","ref","menuOpen","setMenuOpen","textRef","inputValue","setInputValue","selectedGood","selectedCountry","width","handleMouseOver","handleMouseLeave","handleMenuClick","handleMenuSelect","searchFocused","setSearchFocused","onFocus","onBlur","handleSelect","item","event","preventDefault","name","onSelectGood","handleSelectCountry","onSelectCountry","code","handleClear","stopPropagation","clearSelectedGood","handleChangeInput","target","value","handleInputSize","element","style","height","scrollHeight","changeInput","current","e","goods","filter","el","toLowerCase","indexOf","sort","a","b","localeCompare","map","index","Object","values","countries"],"mappings":"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","sourcesContent":["import React, {forwardRef, useImperativeHandle, useState, useRef, useEffect} from \"react\";\nimport dpgBadge from \"../public/dpgBadge.svg\";\nimport UseWindowDimensions from \"./UseWindowDimensions\";\n\nconst SearchBox = forwardRef((props, ref) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const textRef = useRef();\n  const [inputValue, setInputValue] = useState(\n    props.selectedGood\n      ? props.selectedGood\n      : props.selectedCountry\n      ? props.selectedCountry\n      : \"\"\n  );\n  const {width} = UseWindowDimensions();\n  const handleMouseOver = () => {\n    !menuOpen && setMenuOpen(true);\n  };\n  const handleMouseLeave = () => {\n    menuOpen && setMenuOpen(false);\n  };\n  const handleMenuClick = () => {\n    !menuOpen && setMenuOpen(true);\n  };\n  const handleMenuSelect = () => {\n    menuOpen && setMenuOpen(false);\n  };\n  const [searchFocused, setSearchFocused] = useState(false);\n  const onFocus = () => setSearchFocused(true);\n  const onBlur = () => setSearchFocused(false);\n  const handleSelect = (item, event) => {\n    event.preventDefault();\n    // Here, we invoke the callback with the new value\n    setInputValue(item.name);\n    props.onSelectGood(item);\n  };\n  const handleSelectCountry = (item, event) => {\n    event.preventDefault();\n    // Here, we invoke the callback with the new value\n    setInputValue(item.name);\n    props.onSelectCountry(item.code);\n  };\n  const handleClear = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setInputValue(\"\");\n    props.clearSelectedGood();\n  };\n  const handleChangeInput = (event) => {\n    setInputValue(event.target.value);\n  };\n  const handleInputSize = (element) => {\n    element.style.height = \"2rem\";\n    element.style.height = element.scrollHeight + \"px\";\n  };\n  const changeInput = (value) => {\n    setInputValue(value);\n  };\n  useImperativeHandle(ref, () => {\n    return {\n      changeInput: changeInput,\n    };\n  });\n  useEffect(() => {\n    handleInputSize(textRef.current);\n    // code to run after render goes here\n  });\n\n  return (\n    <div className=\"selectContainer\">\n      <div\n        onClick={handleMenuClick}\n        onMouseOver={handleMouseOver}\n        onMouseLeave={handleMouseLeave}\n        id=\"dg-menu\"\n      >\n        <textarea\n          ref={textRef}\n          onFocus={onFocus}\n          onBlur={(e) => onBlur(e)}\n          className=\"searchInput\"\n          type=\"text\"\n          value={inputValue}\n          placeholder=\"Select a digital good or country\"\n          onChange={(e) => handleChangeInput(e)}\n        ></textarea>\n        <span\n          className={menuOpen || searchFocused ? \"arrow up active\" : \"arrow down active\"}\n        ></span>\n        <div\n          onClick={handleMenuSelect}\n          onMouseLeave={handleMouseLeave}\n          id=\"dg-menu-dropdown\"\n          className={menuOpen || searchFocused ? \"active\" : \"\"}\n        >\n          {props.goods\n            .filter(\n              (el) => el.name.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1\n            )\n            .sort((a, b) => a.name.localeCompare(b.name))\n            .map((item, index) => (\n              <a key={item.name + index} href=\"#\" onClick={(e) => handleSelect(item, e)}>\n                {item.name}\n                {width > 1008 && <img width=\"45px\" height=\"auto\" src={dpgBadge}></img>}\n              </a>\n            ))}\n          {Object.values(props.countries)\n            .filter(\n              (el) => el.name.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1\n            )\n            .sort((a, b) => a.name.localeCompare(b.name))\n            .map((item, index) => (\n              <a\n                key={item.name + index}\n                href=\"#\"\n                onClick={(e) => handleSelectCountry(item, e)}\n              >\n                {item.name}\n              </a>\n            ))}\n        </div>\n      </div>\n      <div className=\"closeIcon\" onClick={(e) => handleClear(e)}>\n        <span>x</span>\n      </div>\n    </div>\n  );\n});\nexport default SearchBox;\n"]},"metadata":{},"sourceType":"module"}